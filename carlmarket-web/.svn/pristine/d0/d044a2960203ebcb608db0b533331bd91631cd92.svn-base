package com.hui.web;

import java.util.HashMap;
import java.util.Map;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import com.hui.common.utils.FastDFSClient;
import com.hui.common.utils.JsonUtils;

@Controller
public class ImageUploadController {

	//注解给将配置文件中的值赋值给IMAGE_SERVER_URL
	@Value("${IMAGE_SERVER_URL}")
	private String IMAGE_SERVER_URL;
	
	@RequestMapping("/pic/upload")
	@ResponseBody
	public String imageUpload(MultipartFile uploadFile ) {
		
		try {
			//使用FastDFSClient工具类对象，加载配置文件
			FastDFSClient client = new FastDFSClient("classpath:conf/client.conf");
			//获得上传文件的文件名
			String fileName = uploadFile.getOriginalFilename();
			//获取文件名的后缀
			String extName = fileName.substring(fileName.lastIndexOf(".")+1);
			//用FastDFSClient工具类的uploadFile方法进行上传，返回得到上传后地址的后部分
			//这里是要用uploadFile，传过来的参数；不能用getOriginalFilename后的fileName
			String urlSecond = client.uploadFile(uploadFile.getBytes(), extName);
			//拼接获得完整的url地址
			String path = IMAGE_SERVER_URL+urlSecond;
			
			Map<String,Object> map = new HashMap<>();
			//上传图片，返回json数据中的内容，是固定参数值名称与对应的值
			//成功时
			map.put("error", 0);
			map.put("url", path);
			//将map转换为String类型
			String json = JsonUtils.objectToJson(map);
			
			return json;
			
		} catch (Exception e) {
			e.printStackTrace();
			Map<String,Object> map = new HashMap<>();
			//上传图片，返回json数据中的内容，是固定参数值名称与对应的值
			//失败时
			map.put("error", 1);
			map.put("message", "上传失败");
			
			String json = JsonUtils.objectToJson(map);
			
			return json;
		}
		
	}
	
}
