package com.hui.service.impl;

import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
import com.hui.common.pojo.EasyUIDatagridResult;
import com.hui.common.utils.IDUtils;
import com.hui.common.utils.TaotaoResult;
import com.hui.mapper.TbItemDescMapper;
import com.hui.mapper.TbItemMapper;
import com.hui.mapper.TbItemParamItemMapper;
import com.hui.pojo.TbItem;
import com.hui.pojo.TbItemDesc;
import com.hui.pojo.TbItemExample;
import com.hui.pojo.TbItemParamItem;
import com.hui.service.TbItemService;

@Service
public class TbItemServiceImpl implements TbItemService{
	
	@Autowired
	private TbItemMapper tbItemMapper;
	
	@Autowired
	private TbItemDescMapper tbItemDescMapper;
	
	@Autowired
	private TbItemParamItemMapper tbItemParamItemMapper;

	@Override
	public EasyUIDatagridResult findItems(Integer page, Integer rows) {
		
		TbItemExample example = new TbItemExample();
		
		//在查询之前用pagehelper包中方法进行分页装载
		PageHelper.startPage(page, rows);
		
		//查询所有
		List<TbItem> selectByExample = tbItemMapper.selectByExample(example);
		
		EasyUIDatagridResult result = new EasyUIDatagridResult();
		//以下是将数据封装进EasyUIDatagridResult中
		result.setRows(selectByExample);
		//统计数据库中这个表总共有多少条数据
		PageInfo<TbItem> pageInfo = new PageInfo<>(selectByExample);
		long total = pageInfo.getTotal();
		
		result.setTotal(total);
		
		return result;
	}

	@Override
	public TaotaoResult addItem(TbItem tbItem, String desc,String itemParams) {
		
			//使用工具类生成一个唯一的id
			long id = IDUtils.genItemId();
			//补全TbItem中的参数
			tbItem.setId(id);
			tbItem.setStatus((byte)1);
			tbItem.setCreated(new Date());
			tbItem.setUpdated(new Date());
			//将数据添加到tb_item表
			tbItemMapper.insert(tbItem);
			
			//将数据添加到tb_item_desc表
			TaotaoResult tbItemDM = tbItemDM(id,desc);
			if (tbItemDM.getStatus()!=200) {
				throw new RuntimeException();
			}
			
			//将数据添加到tb_item_param_item表
			if (itemParams!=null) {
				TaotaoResult tbItemPI = tbItemPI(id,itemParams);
				if (tbItemPI.getStatus()!=200) {
					throw new RuntimeException();
				}
			}
			
			//引用TaotaoResult中的一个方法，目的是将获得status的值
			return TaotaoResult.ok();	
	}

	//将数据添加到tb_item_param_item表
	private TaotaoResult tbItemPI(long id, String itemParams) {
		
		TbItemParamItem tbItemParamItem = new TbItemParamItem();
		tbItemParamItem.setItemId(id);
		tbItemParamItem.setParamData(itemParams);
		tbItemParamItem.setCreated(new Date());
		tbItemParamItem.setUpdated(new Date());
		
		tbItemParamItemMapper.insert(tbItemParamItem);
		
		return TaotaoResult.ok();
		
	}

	//将数据添加到tb_item_desc表
	private TaotaoResult tbItemDM(long id, String desc) {
		
		TbItemDesc tbItemDesc = new TbItemDesc();
		tbItemDesc.setItemId(id);
		tbItemDesc.setItemDesc(desc);
		tbItemDesc.setCreated(new Date());
		tbItemDesc.setUpdated(new Date());
		
		tbItemDescMapper.insert(tbItemDesc);
		
		return TaotaoResult.ok();
		
	}
	
	 
	
}
