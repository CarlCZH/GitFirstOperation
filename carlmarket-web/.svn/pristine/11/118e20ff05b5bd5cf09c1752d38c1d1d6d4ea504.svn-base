package com.hui.web;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.hui.common.pojo.EasyUIDatagridResult;
import com.hui.common.utils.TaotaoResult;
import com.hui.service.TbItemParamService;

@Controller
@RequestMapping("/item/param")
public class ItemParamController {
	
	@Autowired
	private TbItemParamService tbItemParamService;
	
	//查询所有item_param
	@RequestMapping("/list")
	@ResponseBody
	public EasyUIDatagridResult findAllItemParam(Integer page,Integer rows) {
		
		EasyUIDatagridResult findAllItemParamDatas = tbItemParamService.findAllItemParamDatas(page, rows);
		
		return findAllItemParamDatas;
	}

	//根据itemId来查询paramData
	@RequestMapping("/query/itemcatid/{itemId}")
	@ResponseBody
	public TaotaoResult findParam(@PathVariable Long itemId) {
		
		TaotaoResult findParamByItemCatId = tbItemParamService.findParamByItemCatId(itemId);
		
		return findParamByItemCatId;
		
	}
	
	//添加规格参数模板
	@RequestMapping("/save/{id}")
	@ResponseBody
	public TaotaoResult addParam(@PathVariable Long id,String paramData) {
		try {
			TaotaoResult addItemParam = tbItemParamService.addItemParam(id, paramData);
			return addItemParam;
		} catch (Exception e) {
			e.printStackTrace();
			return TaotaoResult.build(250, "添加失败");
		}
		
	}
	
	//根据id删除规格参数模板
	//json数据，要取前端的json中的数据，那么要写起对应得键值，名称要一致
	@RequestMapping("/delete")
	@ResponseBody
	public TaotaoResult deleteParam(Long[] ids) {
		
		try {
			return tbItemParamService.deleteItemParam(ids);	
		} catch (Exception e) {
			e.printStackTrace();
			return TaotaoResult.build(250, "删除失败");
		}
		
	}
	
	
	
}
